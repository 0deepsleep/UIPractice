<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:background="#FFFFFF"
    android:paddingLeft="15dp"
    android:paddingRight="15dp"
    android:paddingTop="20dp"
    tools:context=".MainActivity">



    <ImageView
        android:layout_width="150dp"
        android:layout_height="150dp"
        android:src="@drawable/domino_logo"
        android:layout_gravity="center"
        android:scaleType="centerCrop"/>


    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="아이디"
        android:textColor="#000000"
        android:textSize="12sp" />
    // hint : 흐리게 글씨있고 입력하면 사라지는 거
    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="이메일 양식으로 입력"
        android:inputType="textEmailAddress"/>

    //inputType : 사용자 입력할 때 데이터 종류에 따라 편한 키보드 띄움


    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:text="비밀번호" />

    <EditText
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="비밀번호를 입력하세요"
        android:inputType="textPassword"/>
    // input textPassword하면 비번 칠 때 땡댕이로 바뀜


    <CheckBox
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:checked="true"
        android:text="자동 로그인 하실?" />

    <Switch
        android:visibility="gone"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="푸시 알림" />

    <RadioGroup
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:orientation="horizontal"> //여러개 할거라 그냥 꺽쇠로 닫는다!
        <RadioButton
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="사용자 모드" />

        <RadioButton
            android:enabled="false"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="관리자 모드" />

    </RadioGroup>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="10dp"
        android:orientation="horizontal">

        <Button
            android:layout_weight="1"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:text="회원가입" />

        <Button
            android:id="@+id/loginButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="로그인" />

    </LinearLayout>

    /*
    ㅁ Button : 제일 기본이며 텍스트 속성으로 어떤 버튼인지 표기
    => 자매품 : ImageButton : text 대신 이미지 파일로 어떤 버튼인지 표기, 근데 안이뻐서 잘 안씀

    ㅁ ChenkBox : 동의여부 (true/false) 받아내는 용도
    => text 속성으로 어떤 체크박스인지 안내
    checked = true 로 설정하면 기본으로 체크 돼서 보여짐

    ㅁ RadioButton : 객관식 선택을 받고싶을 때 가끔 사용 함
    => 객관식으로 고를 시 RadioGroup 으로 묶어야 함. 안하면 중복 선택이 돼 버림
    => radiogroup도 orientation 속성으로 배치 조절 가능


    android:background="@drawable/domino_logo" =>  이런식으로 뒤에 로고를 넣을 수 있다.

    이미지 파일 이름 영어 소문자, 숫자, _ 으로만 해야 함 (확장자도 꼭 소문자!)
    이미지 파일 저장해서 res>drawable 폴더찍고 붙여넣기 (v24 아닌걸로 넣어야 모든 버전 호환)
    android:src="@이미지이름"
    scr : 어떤 그림 파일을 보여줄지 결정. 보통 @drawabl/파일이름 으로 작성
    scaleType : 그림타입과 이미지뷰의 크기 비율이 다를 때 어떻게 대처할지 명시

    ㅁ visiblity : 화면에 나타날지 여부
    1) visible : 실제로 눈에 보이게 설정 (기본값)
    2) invisible : 눈에 보이진 않지만, 자리는 계속 차지 함
    3) gone : 아예 흔적도 없이 사라짐

    ㅁ enabled : 활성화 여부, 눈에는 보이는데 동작 안함

    ㅁ weight : 한 LinearLayout 안에서 크기를 몇대 몇으로 나눌지 설정하는 속성

    ㅁ id : XML 파일 => 코틀린과 연결해 주는 파일

    =================================================
    - XML : 액티비티가 화면에 나타날 때 보여질 구조를 그리는 파일
    - kt파일(코틀린파일) : 액티비티가 열리고 난 후(xml파일 나타난 후) 이뤄질 동작을 작성하는용도

    - xml, kt : 실제로 한 몸처럼 동작함
    - nCreate 함수 안의 setContentView 의 재료가 무엇이냐에 관련 됨
    - XML에서 그려둔 뷰,레이아웃 들을 어떻게 코틀린에 가져가 사용하나?
    1) JAVA : findViewByld라는 메쏘드로 하나하나 변수 연결 해 줘야 함
    2) Kotlin : XML에서 id부여하면 곧바로 kt파일에서 사용 가능



    */
</LinearLayout>

